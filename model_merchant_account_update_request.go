/*
 * Juspay Router - API Documentation
 *
 * ## Get started Juspay Router provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes</a>. You can consume the APIs directly using your favorite HTTP/REST library. We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. ### Base URLs Use the following base URLs when making requests to the APIs:    | Environment   |      Base URL                                        |   |---------------|------------------------------------------------------|   | Sandbox       | <https://sandbox.hyperswitch.io>                   |   | Production    | <https://router.juspay.io>                           |  # Authentication When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key). You may authenticate all API requests with Juspay server by providing the appropriate key in the request Authorization header. Never share your secret api keys. Keep them guarded and secure. 
 *
 * API version: 0.2
 * Contact: support@juspay.in
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// The Merchant Account details to be updated
type MerchantAccountUpdateRequest struct {
	// The identifier for the Merchant Account.
	MerchantId string `json:"merchant_id"`
	// Name of the merchant
	MerchantName string `json:"merchant_name,omitempty"`
	MerchantDetails *MerchantDetails `json:"merchant_details,omitempty"`
	// The URL to redirect after the completion of the operation
	ReturnUrl string `json:"return_url,omitempty"`
	WebhookDetails *WebhookDetails `json:"webhook_details,omitempty"`
	// The routing algorithm to be used to process the incoming request from merchant to outgoing payment processor or payment method. The default is CUSTOM if
	RoutingAlgorithm string `json:"routing_algorithm,omitempty"`
	CustomRoutingRules *[]ArrayOfRoutingRulesInner `json:"custom_routing_rules,omitempty"`
	// A boolean value to indicate if the merchant is a sub-merchant under a master or a parent merchant. By default, its value is false.
	SubMerchantsEnabled bool `json:"sub_merchants_enabled,omitempty"`
	// Refers to the Parent Merchant ID if the merchant being created is a sub-merchant
	ParentMerchantId string `json:"parent_merchant_id,omitempty"`
	// You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
	Metadata *interface{} `json:"metadata,omitempty"`
}
